[{"text": "In this video, I want to introduce you to the idea of a list,", "start": 0.302, "duration": 3.875}, {"text": "of a list in python.", "start": 4.531, "duration": 1.796}, {"text": "It is one of the most powerful data structures in Python,", "start": 6.496, "duration": 2.658}, {"text": "and it really is just a sequence of a bunch of other stuff.", "start": 9.231, "duration": 2.885}, {"text": "So a list in Python would look something like this:", "start": 12.193, "duration": 2.486}, {"text": "So this would be a list of integers,", "start": 14.741, "duration": 2.245}, {"text": "Maybe 1 , -7, 0, 0, 5 and 10", "start": 17.063, "duration": 6.531}, {"text": "And we can have some variable refer to it,", "start": 23.663, "duration": 2.998}, {"text": "so that we can refer back to it later on in the program,", "start": 26.723, "duration": 2.782}, {"text": "so maybe we say a is equal to all of this.", "start": 29.551, "duration": 3.162}, {"text": "And if we run this in the interpreter,", "start": 32.806, "duration": 1.684}, {"text": "or if we run this in a program,", "start": 34.552, "duration": 1.346}, {"text": "now we can refer to the elements of a,", "start": 35.929, "duration": 2.192}, {"text": "and you do that by, so let's say I have a", "start": 38.198, "duration": 2.746}, {"text": "(let me write in the same pink color)", "start": 41.052, "duration": 2.777}, {"text": "You do that by referring to the index of the element inside of the list.", "start": 43.859, "duration": 3.548}, {"text": "So, if I say a and then in brackets, I put a zero here.", "start": 47.453, "duration": 3.375}, {"text": "This says the 0th element in a,", "start": 50.828, "duration": 3.29}, {"text": "0th elment...", "start": 54.179, "duration": 1.202}, {"text": "and the general convention in Python,", "start": 55.427, "duration": 1.663}, {"text": "and this is true of most programming languages,", "start": 57.09, "duration": 1.923}, {"text": "is what some people would consider the first item in an array, or inside of a list", "start": 59.076, "duration": 4.862}, {"text": "you would call it the 0th item, or the index of this item right here, is 0.", "start": 63.984, "duration": 5.394}, {"text": "So, if you were to type this in an interpreter,", "start": 69.44, "duration": 1.614}, {"text": "or if you were to type it in a program,", "start": 71.054, "duration": 1.398}, {"text": "it would evaluate as this item right over here.", "start": 72.514, "duration": 4.244}, {"text": "It would be this item, right over there.", "start": 76.819, "duration": 2.899}, {"text": "And let me do another example:", "start": 79.795, "duration": 1.576}, {"text": "If I were say a of..", "start": 81.402, "duration": 1.744}, {"text": "I shouldn't say a of...", "start": 83.192, "duration": 0.79}, {"text": "If I were to say the second element...", "start": 84.044, "duration": 2.919}, {"text": "in the second element in a", "start": 87.04, "duration": 1.93}, {"text": "this would be 0th element, first element, second element.. It would be", "start": 89.032, "duration": 3.453}, {"text": "this zero, right over there.", "start": 92.485, "duration": 2.866}, {"text": "So, that's how you refer to elements in a list.", "start": 95.397, "duration": 2.38}, {"text": "you can maybe already imagine doing interesting things with that.", "start": 97.884, "duration": 2.731}, {"text": "But, what is really cool with lists ...", "start": 100.676, "duration": 1.168}, {"text": "is that they don't have to all be the same data type.", "start": 101.906, "duration": 2.7}, {"text": "They could be all integers,", "start": 104.675, "duration": 1.491}, {"text": "or all floats...", "start": 106.259, "duration": 1.028}, {"text": "or all strings...", "start": 107.333, "duration": 1.399}, {"text": "but you could mix it up.", "start": 108.809, "duration": 1.383}, {"text": "So you could... you could...", "start": 110.269, "duration": 1.628}, {"text": "Actually, You could take a right over here,", "start": 111.974, "duration": 2.058}, {"text": "and you could redefine one of the elements", "start": 114.094, "duration": 2.795}, {"text": "so you could say...", "start": 116.935, "duration": 1.478}, {"text": "you could say a.....", "start": 118.521, "duration": 1.992}, {"text": "you could say let's reset......", "start": 120.59, "duration": 2.316}, {"text": "(do it in that same pink color)", "start": 122.99, "duration": 1.7}, {"text": "Let's reset the.......the...", "start": 124.813, "duration": 3.255}, {"text": "(I don't know...)", "start": 128.068, "duration": 0.577}, {"text": "let's say the fourth element..", "start": 128.706, "duration": 2.118}, {"text": "Let's reset the fourth element in a", "start": 130.896, "duration": 2.036}, {"text": "to be equal to...", "start": 132.993, "duration": 1.739}, {"text": "to be equal to..\"this text\"", "start": 134.732, "duration": 3.247}, {"text": "So literally \"this text\".", "start": 138.025, "duration": 2.231}, {"text": "Literally \"this text\"", "start": 140.916, "duration": 1.861}, {"text": "and so If you did that..", "start": 142.955, "duration": 1.116}, {"text": "if you set the fourth element be \"this text\"", "start": 144.117, "duration": 2.226}, {"text": "and then you and your program say print..", "start": 146.42, "duration": 2.629}, {"text": "print a..print a", "start": 149.049, "duration": 2.949}, {"text": "then a... would look like this.", "start": 151.998, "duration": 3.378}, {"text": "The 0th element wouldn't change.", "start": 155.422, "duration": 2.012}, {"text": "Still be 1", "start": 157.48, "duration": 0.916}, {"text": "The first element will stll be -7", "start": 158.458, "duration": 2.002}, {"text": "The...the...so this is the 0 first..this...this...this..", "start": 160.521, "duration": 3.557}, {"text": "This two index element would still be 0", "start": 164.124, "duration": 2.953}, {"text": "This will be the third.", "start": 167.138, "duration": 1.741}, {"text": "So this is 0th index.", "start": 168.879, "duration": 1.49}, {"text": "First, second, third, fourth.", "start": 170.415, "duration": 2.223}, {"text": "to replace the fourth element.", "start": 172.715, "duration": 1.618}, {"text": "So the fourth element will now be \"this text\"", "start": 174.379, "duration": 2.069}, {"text": "It will now be...this....will now be \"this text\"", "start": 176.448, "duration": 4.621}, {"text": "...the second...we wanna try out with Python intrepreter", "start": 181.315, "duration": 3.61}, {"text": "and the last element will still be.....", "start": 184.987, "duration": 2.363}, {"text": "The last element will still be 10.", "start": 187.427, "duration": 2.222}, {"text": "and this will completely valid to do in Python.", "start": 189.726, "duration": 2.848}, {"text": "You can mix data type.", "start": 192.59, "duration": 1.363}, {"text": "In fact, you could even...if you..after..after you did this,", "start": 194.015, "duration": 3.35}, {"text": "you could even say..that..a", "start": 197.426, "duration": 2.612}, {"text": "Let's redefine the 0th element of a..", "start": 200.146, "duration": 3.263}, {"text": "to be another list.", "start": 203.471, "duration": 2.116}, {"text": "To be the list -1, -2.", "start": 205.649, "duration": 3.335}, {"text": "and if you did this, then this 0th element over here,", "start": 209.045, "duration": 3.688}, {"text": "will in the list, the 0th element will now refer to this thing.", "start": 212.733, "duration": 3.4}, {"text": "So the list would now look like this.", "start": 216.133, "duration": 1.867}, {"text": "So the first element or the 0th element I should say will be this thing.", "start": 218.0, "duration": 3.6}, {"text": "Negative 1, negative 2.", "start": 221.6, "duration": 2.0}, {"text": "And then you'd have you're negative seven, zero, zero, this text", "start": 223.6, "duration": 6.954}, {"text": "and then you'll have your 10, just like that.", "start": 230.554, "duration": 3.046}, {"text": "So you define it this way and literally replaces or the 0th element will now refer to this data structure", "start": 233.6, "duration": 6.333}, {"text": "over here and you could maybe already imagine useful ways to use this in programs", "start": 239.933, "duration": 4.2}, {"text": "and if you can't don't worry about it. We'll see useful ways.", "start": 244.133, "duration": 2.667}, {"text": "Now there is one thing I want to make very clear here", "start": 246.8, "duration": 3.2}, {"text": "is that, when I... Let's say that I have... Let me define some new...", "start": 250.0, "duration": 4.267}, {"text": "Let's say that I have some list that I have the variable b referred to", "start": 254.267, "duration": 5.066}, {"text": "and let's say I make this list: 7, 13, 15.", "start": 259.333, "duration": 6.467}, {"text": "So that's my list.", "start": 265.8, "duration": 1.467}, {"text": "And let's say that I... the next line in my program or maybe using the python interpetrator.", "start": 267.267, "duration": 4.333}, {"text": "I say that c is equal to b.", "start": 271.6, "duration": 3.4}, {"text": "And sometimes you might be tempted to do this is, hey I want to have a copy of b.", "start": 275.0, "duration": 3.8}, {"text": "And what I wanna make clear is that this point, c and b are actually pointing at the same thing.", "start": 278.8, "duration": 5.133}, {"text": "They are referring to the same thing, so if you think about what's happening.", "start": 283.933, "duration": 3.067}, {"text": "There are some entity in memory that looks like this: 7, 13, 15.", "start": 287.0, "duration": 5.667}, {"text": "And when you execute this, when you execute this first line over here that says", "start": 292.667, "duration": 5.4}, {"text": "that look, b is going to definetly refer to that.", "start": 298.067, "duration": 2.266}, {"text": "If the variable b refers to this entity and when you say c is equal to b,", "start": 300.333, "duration": 5.4}, {"text": "this is actually saying that c is going to refer to the same thing that b is referring to.", "start": 305.733, "duration": 5.467}, {"text": "So c is also going to refer to this exact same thing.", "start": 311.2, "duration": 5.933}, {"text": "C is not a copy of it, we didn't make a copy of it and make c refer to that.", "start": 317.133, "duration": 4.6}, {"text": "And what's relevant here is if we now change c we are also going to change or if we change", "start": 321.733, "duration": 5.534}, {"text": "what c is refering to we'll also change what b is referring to.", "start": 327.267, "duration": 3.333}, {"text": "And I'll show you that in a second with the interpetator, but let me show you what I'm talking about.", "start": 330.6, "duration": 3.267}, {"text": "So this point, I say that c...If I... the next line I say that c, the 0th element in c needs to be equal", "start": 333.867, "duration": 9.2}, {"text": "to 1.", "start": 343.067, "duration": 1.108}, {"text": "And if I were to tell you then print c you would get.", "start": 344.175, "duration": 4.877}, {"text": "You would get 1, 13 and 15.", "start": 349.052, "duration": 5.348}, {"text": "But if you were to say print b you would also get 1, 13 and 15.", "start": 354.4, "duration": 5.067}, {"text": "And that's because this call right over here or this statement right over here", "start": 359.467, "duration": 4.133}, {"text": "it changes what the 0th element in this list refers to.", "start": 363.6, "duration": 5.867}, {"text": "So it won't refer to 7 anymore it will refer to 1.", "start": 369.467, "duration": 2.866}, {"text": "So now if you say b of 0, this will be equal to 1 and not 7.", "start": 372.333, "duration": 7.067}, {"text": "So you might say:\" Well Sal okay, I understand that, so if set a variable equal to another variable", "start": 379.4, "duration": 5.0}, {"text": "that refers to a list they are actually refering to the same list and if I change one of the items in", "start": 384.4, "duration": 3.867}, {"text": "the list that this is referring to is actually changing what this is referring to.", "start": 388.267, "duration": 3.0}, {"text": "So how could I copy lists?\"", "start": 391.267, "duration": 2.2}, {"text": "How could I actually copy it.", "start": 393.467, "duration": 1.533}, {"text": "And there you use the notion that can actually and I'll write right over here if you actually want to", "start": 395.0, "duration": 7.933}, {"text": "copy things you would do this.", "start": 402.933, "duration": 2.067}, {"text": "You would write c is equal to b and this might look a little funny for you", "start": 405.0, "duration": 5.533}, {"text": "but you put this colon sign over here and what this does is it tells you copy everything in b", "start": 410.533, "duration": 5.734}, {"text": "from the beginning of b all the way to the end of the b.", "start": 416.267, "duration": 2.666}, {"text": "So you could write c is equal to b and then you could say 0 all the way up to but not including", "start": 418.933, "duration": 13.226}, {"text": "the second element.", "start": 432.159, "duration": 1.641}, {"text": "So this right over here, this would create a new list that is the 0th and only the first element.", "start": 433.8, "duration": 10.0}, {"text": "It won't include the second element.", "start": 443.8, "duration": 1.667}, {"text": "So in this case, what you do... So this one right over here would create a new list that looks like this.", "start": 445.467, "duration": 5.133}, {"text": "That creates... That looks like... If we assume we haven't changed b and if we assume this was", "start": 450.6, "duration": 6.333}, {"text": "our definition of b, then it will create a new list that looks like this and c will now refer to this", "start": 456.933, "duration": 5.534}, {"text": "new list.", "start": 462.467, "duration": 1.333}, {"text": "So c will now refer to this new list.", "start": 463.8, "duration": 2.8}, {"text": "So it created a copy of the first two elements, 0th element and first, not the seconth element.", "start": 466.6, "duration": 4.933}, {"text": "You would have to put 3 here if you wanted the second element,", "start": 471.533, "duration": 2.534}, {"text": "so up to but not including the second element.", "start": 474.067, "duration": 2.8}, {"text": "If you wanted all of the elements to copy you would do this.", "start": 476.867, "duration": 2.333}, {"text": "So this is simply saying from the beginning all the way to the end.", "start": 479.2, "duration": 3.067}, {"text": "So it would create... It would create a separate list...", "start": 482.267, "duration": 3.733}, {"text": "It would create a separate list that looks just like b, but it is a separate one.", "start": 486.0, "duration": 4.867}, {"text": "And then c could refer to that and now if you change c you won't change b.", "start": 490.867, "duration": 5.666}, {"text": "So enough of just talking about it, let's actually play with it on our interpetrator.", "start": 496.533, "duration": 5.0}, {"text": "Cuz this is the fun stuff right over here.", "start": 501.533, "duration": 2.134}, {"text": "So let's say that we have... Let's say that... Let me get rid some of this text that I have here", "start": 503.667, "duration": 6.666}, {"text": "So you don't get confused.", "start": 510.333, "duration": 1.934}, {"text": "So let's say I define some list.", "start": 512.267, "duration": 1.733}, {"text": "A is equal to 1, 2 -- I'll write this way -- 1, 2, negative 7, 9, 11.", "start": 514.0, "duration": 12.8}, {"text": "So I've defined and could even verify that.", "start": 526.8, "duration": 2.733}, {"text": "Print a, you can see it right there.", "start": 529.533, "duration": 1.934}, {"text": "We can change one of the elements in a.", "start": 531.467, "duration": 2.133}, {"text": "We can say... Let's change the first element and remember, when we say we have an index 1", "start": 533.6, "duration": 6.0}, {"text": "we are not talking about this one here this is the 0th element.", "start": 539.6, "duration": 2.133}, {"text": "So we are changing this one right over here.", "start": 541.733, "duration": 1.734}, {"text": "So let's change that.", "start": 543.467, "duration": 2.133}, {"text": "Let's just for fun... Let's change that to a string.", "start": 545.6, "duration": 3.333}, {"text": "So \"Sal's String*.", "start": 548.933, "duration": 6.134}, {"text": "And now let's see what a looks like. Print a.", "start": 555.067, "duration": 3.466}, {"text": "So notice, it took this, this is the index one, this is the first, 0th element, 1st element.", "start": 558.533, "duration": 6.267}, {"text": "It changed the first element to \"Sal's String\" and we see it right there.", "start": 564.8, "duration": 3.8}, {"text": "Now let's do something interesting.", "start": 568.6, "duration": 1.733}, {"text": "Let's set b equal to a.", "start": 570.333, "duration": 2.4}, {"text": "And let's print... Let's print b. So it looks like a.", "start": 572.733, "duration": 6.067}, {"text": "And let me do something else.", "start": 578.8, "duration": 1.333}, {"text": "Let me... Let c equal to a and then do what I talked about, so let me make c equal to a copy of a.", "start": 580.133, "duration": 8.334}, {"text": "So let's print c. Print c.", "start": 588.467, "duration": 3.066}, {"text": "So b and c looked the same, but they are two different things.", "start": 591.533, "duration": 3.8}, {"text": "C is a copy of a or c is a copy of the thing that a is referring to.", "start": 595.333, "duration": 4.8}, {"text": "B is the thing that a is referring to and to see that, let's change the first element", "start": 600.133, "duration": 4.4}, {"text": "of both b and c.", "start": 604.533, "duration": 1.934}, {"text": "so if you change the first element of b.", "start": 606.467, "duration": 2.0}, {"text": "So b of... the 0th element in b. Let's just make that, I don't know. Let's make that equal to...", "start": 608.467, "duration": 5.533}, {"text": "Let's make it equal to 0.", "start": 614.0, "duration": 4.498}, {"text": "Now if we print b you see the first element is 0.", "start": 618.498, "duration": 3.969}, {"text": "And what you'll also see is that if you print a, the first element will be 0 now.", "start": 622.467, "duration": 4.666}, {"text": "Cuz they were referring to the same thing.", "start": 627.133, "duration": 2.667}, {"text": "So it said, whatever b is referring to make it, the very 0th element, make that equal to 0.", "start": 629.8, "duration": 4.8}, {"text": "Well a was referring to the same thing so it also became 0.", "start": 634.6, "duration": 3.667}, {"text": "But c is referring to a copy so c should not have changed.", "start": 638.267, "duration": 3.8}, {"text": "C did not change. The 0th element here did not change a bit.", "start": 642.067, "duration": 5.266}, {"text": "So I'll leave you there. Lists are super powerful, there's a ton of functions you can do", "start": 647.333, "duration": 3.867}, {"text": "with lists, In fact, I'll expose you to a few right here.", "start": 651.2, "duration": 2.333}, {"text": "So that is a, you can add elements to a.", "start": 653.533, "duration": 3.334}, {"text": "So you could say a dot append and you can add something to the end of a.", "start": 656.867, "duration": 4.466}, {"text": "So you could add \"new element\" and if you do that it should add it to the end of a.", "start": 661.333, "duration": 8.467}, {"text": "So let's look at a.", "start": 669.8, "duration": 1.667}, {"text": "It added that element.", "start": 671.467, "duration": 1.133}, {"text": "Well b is referring to the same thing so let's see what b looks like.", "start": 672.6, "duration": 2.267}, {"text": "It has a new element.", "start": 674.867, "duration": 1.333}, {"text": "C is referring to a copy of the old a, so let's see what that looks like.", "start": 676.2, "duration": 4.0}, {"text": "Didn't add it there, cuz it didn't add it to the copy.", "start": 680.2, "duration": 3.067}, {"text": "It added only to what a was referring to which is the same thing b is referring to", "start": 683.267, "duration": 3.666}, {"text": "and there is a ton of useful functions that we'll explore them as we do more and more", "start": 686.933, "duration": 3.867}, {"text": "programs, more more example problems,", "start": 690.8, "duration": 2.667}, {"text": "but there is a bunch of useful functions or methods that lists have to be able to manipulate them", "start": 693.467, "duration": 5.0}, {"text": "and change them in different ways.", "start": 698.467, "duration": 359301.532}]